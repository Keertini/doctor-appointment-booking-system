{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\keert\\\\Documents\\\\ThriveHackathon\\\\frontend\\\\src\\\\components\\\\Available-doctors\\\\AvailableDoctorList.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Col } from \"reactstrap\";\nimport useFetch from \"../../hooks/useFetch\";\nimport { BASE_URL } from \"../../utils/config\";\nimport DoctorCard from \"../../shared/DoctorCard\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvailableDoctorList = () => {\n  _s();\n  const {\n    data: availableDoctors,\n    loading,\n    error\n  } = useFetch(`${BASE_URL}/doctors/search/getAvailableDoctors`);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading && /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Loading.....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this), !loading && !error && (availableDoctors === null || availableDoctors === void 0 ? void 0 : availableDoctors.map(doctor => /*#__PURE__*/_jsxDEV(Col, {\n      lg: \"3\",\n      md: \"4\",\n      sm: \"6\",\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(DoctorCard, {\n        doctor: doctor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)\n    }, doctor._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }, this)))]\n  }, void 0, true);\n};\n_s(AvailableDoctorList, \"8+0pPyzOwFU12sxqqed3/X5QS54=\", false, function () {\n  return [useFetch];\n});\n_c = AvailableDoctorList;\nexport default AvailableDoctorList;\nvar _c;\n$RefreshReg$(_c, \"AvailableDoctorList\");","map":{"version":3,"names":["React","Col","useFetch","BASE_URL","DoctorCard","AvailableDoctorList","data","availableDoctors","loading","error","map","doctor","_id"],"sources":["C:/Users/keert/Documents/ThriveHackathon/frontend/src/components/Available-doctors/AvailableDoctorList.jsx"],"sourcesContent":["import React from \"react\";\nimport { Col } from \"reactstrap\";\nimport useFetch from \"../../hooks/useFetch\";\nimport { BASE_URL } from \"../../utils/config\";\nimport DoctorCard from \"../../shared/DoctorCard\";\n\nconst AvailableDoctorList = () => {\n  const {\n    data: availableDoctors,\n    loading,\n    error,\n  } = useFetch(`${BASE_URL}/doctors/search/getAvailableDoctors`);\n\n  return (\n    <>\n      {loading && <h4>Loading.....</h4>}\n      {error && <h4>{error}</h4>}\n      {!loading &&\n        !error &&\n        availableDoctors?.map((doctor) => (\n          <Col lg=\"3\" md=\"4\" sm=\"6\" className=\"mb-4\" key={doctor._id}>\n            <DoctorCard doctor={doctor} />\n          </Col>\n        ))}\n    </>\n  );\n};\n\nexport default AvailableDoctorList;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,YAAY;AAChC,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,OAAOC,UAAU,MAAM,yBAAyB;AAAC;AAAA;AAEjD,MAAMC,mBAAmB,GAAG,MAAM;EAAA;EAChC,MAAM;IACJC,IAAI,EAAEC,gBAAgB;IACtBC,OAAO;IACPC;EACF,CAAC,GAAGP,QAAQ,CAAE,GAAEC,QAAS,qCAAoC,CAAC;EAE9D,oBACE;IAAA,WACGK,OAAO,iBAAI;MAAA,UAAI;IAAY;MAAA;MAAA;MAAA;IAAA,QAAK,EAChCC,KAAK,iBAAI;MAAA,UAAKA;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM,EACzB,CAACD,OAAO,IACP,CAACC,KAAK,KACNF,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAEG,GAAG,CAAEC,MAAM,iBAC3B,QAAC,GAAG;MAAC,EAAE,EAAC,GAAG;MAAC,EAAE,EAAC,GAAG;MAAC,EAAE,EAAC,GAAG;MAAC,SAAS,EAAC,MAAM;MAAA,uBACxC,QAAC,UAAU;QAAC,MAAM,EAAEA;MAAO;QAAA;QAAA;QAAA;MAAA;IAAG,GADgBA,MAAM,CAACC,GAAG;MAAA;MAAA;MAAA;IAAA,QAG3D,CAAC;EAAA,gBACH;AAEP,CAAC;AAAC,GApBIP,mBAAmB;EAAA,QAKnBH,QAAQ;AAAA;AAAA,KALRG,mBAAmB;AAsBzB,eAAeA,mBAAmB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}